version: 2.1

commands:
  print_pipeline_id:
    description: "a simple command to "
    parameters:
      to:
        type: string
        default: "No $CIRCLE_WORKFLOW_ID available"
    steps:
      - run: echo "The Circle CI Workflow ID is << parameters.to >>"

executors:
  my-executor:
    docker:
      - image: circleci/node:13.8.0
    working_directory: /tmp

jobs:
  flow:
    executor: my-executor
    steps:
      - run: mkdir -p workspace
      - run: echo "Hello, world!" > workspace/echo-output
      - print_pipeline_id:
          to: $CIRCLE_WORKFLOW_ID

      # Persist the specified paths (workspace/echo-output) into the workspace for use in downstream job.
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: workspace
          # Must be relative path from root
          paths:
            - echo-output

  downstream:
    executor: my-executor
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/workspace
      - print_pipeline_id:
          to: $CIRCLE_WORKFLOW_ID
      - run: |
          if [[ `cat /tmp/workspace/echo-output` == "Hello, world!" ]]; then
            echo "It worked!";
          else
            echo "Nope!"; exit 1
          fi
      - run: 
          name: Cause Error
          command: return 1
      - run:
          name: Upload Failed Tests
          command: echo "Something has gone wrong"
          when: on_fail

workflows:
  btd:
    jobs:
      - flow
      - downstream:
          requires:
            - flow
